$date
	Tue Nov  7 21:09:20 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module COUNTER_MOD_5 $end
$var wire 1 ! and_same $end
$var wire 1 " clock $end
$var wire 1 # dec $end
$var wire 1 $ inc $end
$var wire 1 % not_clock $end
$var wire 1 & not_dec $end
$var wire 1 ' not_inc $end
$var wire 3 ( same [2:0] $end
$var wire 1 ) not_i2 $end
$var wire 1 * not_i1 $end
$var wire 1 + not_i0 $end
$var wire 3 , new_value [2:0] $end
$var wire 3 - index [2:0] $end
$var wire 3 . increased [2:0] $end
$var wire 3 / decreased [2:0] $end
$var wire 3 0 and_increased [2:0] $end
$var wire 3 1 and_decreased [2:0] $end
$upscope $end
$scope module DECODER2TO4 $end
$var wire 2 2 a [1:0] $end
$var wire 1 3 a0 $end
$var wire 1 4 a1 $end
$var wire 1 5 a2 $end
$var wire 1 6 a3 $end
$var wire 2 7 not_a [1:0] $end
$upscope $end
$scope module DECODER3TO5 $end
$var wire 3 8 a [2:0] $end
$var wire 1 9 a0 $end
$var wire 1 : a1 $end
$var wire 1 ; a2 $end
$var wire 1 < a3 $end
$var wire 1 = a4 $end
$var wire 3 > not_a [2:0] $end
$upscope $end
$scope module INVERT5 $end
$var wire 3 ? ivalue [2:0] $end
$var wire 1 @ zero $end
$var wire 3 A ovalue [2:0] $end
$var wire 3 B mod_value [2:0] $end
$var wire 3 C invert_mod [2:0] $end
$var wire 4 D hehe [3:0] $end
$var wire 4 E encoded [3:0] $end
$upscope $end
$scope module MEMORY_CELL $end
$var wire 1 F c $end
$var wire 4 G idata [3:0] $end
$var wire 4 H odata [3:0] $end
$var wire 4 I not_gates [3:0] $end
$upscope $end
$scope module stack_tb $end
$var wire 3 J mod_5 [2:0] $end
$var reg 4 K number [3:0] $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx K
bx J
bx I
bx H
bz G
zF
bxz E
bzxxx D
bx C
bx B
bx A
0@
bz ?
bz >
x=
x<
x;
x:
x9
bz 8
bz 7
x6
x5
x4
x3
bz 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
x*
x)
bx (
z'
z&
z%
z$
z#
z"
x!
$end
#1
b0 J
b0 K
#2
b1 J
b1 K
#3
b10 J
b10 K
#4
b11 J
b11 K
#5
b100 J
b100 K
#6
b11 J
b1000 K
#7
b0 J
b1111 K
#8
b100 J
b100 K
#9
b100 J
b1110 K
